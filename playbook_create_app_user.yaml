--- 
- name: update apt and install system packages
  hosts: target4
  become: yes
  vars:
    ubuntu_os_user: osboxes
    node_user: todos
    node_app_location: /home/{{ node_user }}/application
#    app_listening_port: 5000

    MYSQL_ROOT_PASSWORD: secret
    MYSQL_DATABASE: todos

    MYSQL_HOST: localhost
    MYSQL_USER: appTodos
    MYSQL_PASSWORD: secret
    MYSQL_DB: todos
  tasks:
    - name: install packages         
      ansible.builtin.apt:
        pkg:
          - curl
          - ufw
          - nodejs
          - npm
          - mysql-client
          - python3-mysqldb
          - mysql-server
        state: latest
        update_cache: yes
    - name: start MySQL
      service: "name=mysql state=started enabled=yes"
    - name: create the mysql database for the app
      mysql_db: "db={{ MYSQL_DATABASE }} state=present"

    - name: create a db user for the todos app 
      mysql_user:
        name: "{{ MYSQL_USER }}"
        host: localhost
        password: "{{ MYSQL_PASSWORD }}"
        priv: "{{ MYSQL_DB }}.*:ALL"
        state: present

    - name: install forever to run the node.js app
      npm: name=forever global=yes state=present

    - name: create a group for the user to run the app
      group:
        name: "{{ node_user}}"
        state: present
    - name: create a new Linux user for the node app
      user:
        name: "{{ node_user }}"
        comment: Node user
        group: "{{ node_user }}"
        shell: /bin/bash
        password: $6$mysecretsalt$nkwlRwhrA/GTzmP.pn3yqJ2Q7FdUwU7qQEz9QHpCtkbQqIUJjBBg                                                                                                             RjT3HiFjsnh6m0m2y3ZH2dDEvWHxIApNH0
        state: present
    - name: ensure node.js app folder exists
      file: "path={{ node_app_location }} state=directory"
      become_user: "{{ node_user }}"
    - name: copy the app to server
      copy: "src=app dest={{ node_app_location }}"
      become_user: "{{ node_user}}"

    - name: configure the port where the application listens
      replace:
        path: "{{ node_app_location }}/app/src/index.js"
        regexp: '3000'
        replace: '"{{ app_listening_port }}"'
      become_user: "{{ node_user}}"

    - name: install dependencies
      npm: path={{ node_app_location }}/app
      become_user: "{{ node_user}}"

    - name: copy start script
      copy:
        src: startNode.sh
        dest: "{{ node_app_location }}/app/startNode.sh"
        owner: todos
        group: todos
        mode: '0700'
      become_user: "{{ node_user}}"
  
# configure the startNode.sh script
    - name: configure the MYSQL_HOST
      replace:
        path: "{{ node_app_location }}/app/startNode.sh"
        regexp: 'mysql_host_placeholder'
        replace: "{{ MYSQL_HOST }}"
      become_user: "{{ node_user}}"
    - name: configure the MYSQL_USER
      replace:
        path: "{{ node_app_location }}/app/startNode.sh"
        regexp: 'mysql_user_placeholder'
        replace: "{{ MYSQL_USER }}"
      become_user: "{{ node_user}}"
    - name: configure the MYSQL_PASSWORD
      replace:
        path: "{{ node_app_location }}/app/startNode.sh"
        regexp: 'mysql_password_placeholder'
        replace: "{{ MYSQL_PASSWORD }}"
      become_user: "{{ node_user}}"
    - name: configure the MYSQL_DB
      replace:
        path: "{{ node_app_location }}/app/startNode.sh"
        regexp: 'mysql_db_placeholder'
        replace: "{{ MYSQL_DB }}"
      become_user: "{{ node_user}}"

    - name: configure the start command
      replace:
        path: "{{ node_app_location }}/app/startNode.sh"
        regexp: 'app_path_placeholder'
        replace: "{{ node_app_location }}/app/src/index.js"
      become_user: "{{ node_user}}"
#    when MYSQL_DB is not set, the  application is running with sqllite file database
#    - name: ensure 2 files are present
#      file: "path=/etc/todos state=directory owner=todos group=todos mode=0777"

    - name: check list of node.js apps running
      command: forever list
      register: forever_list
      changed_when: false
      become_user: "{{ node_user }}"

    - name: start node.js application
      command: 
        chdir: /home/todos/application/app
        cmd: /bin/bash ./startNode.sh
      when: "forever_list.stdout.find('src/index.js') == -1"
      become_user: "{{ node_user }}"
      async: 1000
      poll: 0
